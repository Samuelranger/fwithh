{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\fiverr\\\\fiverr\\\\brought\\\\shoponix\\\\dashboard-source-code\\\\components\\\\Customers\\\\AllCustomers.js\",\n    _this = this;\n\nimport { Header, Table, Icon } from 'semantic-ui-react';\nimport Gravatar from 'react-gravatar';\nimport formatDate from '../../utils/formatDate';\n\nvar AllCustomers = function AllCustomers(_ref) {\n  var customers = _ref.customers;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      as: \"h2\",\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        name: \"users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, _this), \"Customers (\", customers.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(Table, {\n      celled: true,\n      children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n        children: /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Joined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Updated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 21\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(Table.Body, {\n        children: customers.map(function (customer) {\n          return /*#__PURE__*/_jsxDEV(Table.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: /*#__PURE__*/_jsxDEV(Gravatar, {\n                email: customer.email,\n                size: 50,\n                rating: \"pg\",\n                \"default\": \"monsterid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 29\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 25\n            }, _this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: customer.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 25\n            }, _this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: customer.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 25\n            }, _this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: formatDate(customer.createdAt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 25\n            }, _this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: formatDate(customer.updatedAt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 25\n            }, _this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: customer.role === 'admin' ? \"Admin\" : \"Customer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 25\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true);\n};\n\n_c = AllCustomers;\nexport default AllCustomers;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllCustomers\");","map":{"version":3,"sources":["D:/fiverr/fiverr/brought/shoponix/dashboard-source-code/components/Customers/AllCustomers.js"],"names":["Header","Table","Icon","Gravatar","formatDate","AllCustomers","customers","length","map","customer","email","name","createdAt","updatedAt","role"],"mappings":";;;;;;AAAA,SAASA,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,mBAApC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAiB;AAAA,MAAfC,SAAe,QAAfA,SAAe;AAClC,sBACI;AAAA,4BACA,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,eADJ,iBAEgBA,SAAS,CAACC,MAF1B;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,eAKA,QAAC,KAAD;AAAO,MAAA,MAAM,MAAb;AAAA,8BACI,QAAC,KAAD,CAAO,MAAP;AAAA,+BACI,QAAC,KAAD,CAAO,GAAP;AAAA,kCACI,QAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI,QAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAGI,QAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,eAII,QAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,eAKI,QAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALJ,eAMI,QAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,eADJ,eAWI,QAAC,KAAD,CAAO,IAAP;AAAA,kBACKD,SAAS,CAACE,GAAV,CAAc,UAAAC,QAAQ;AAAA,8BACnB,QAAC,KAAD,CAAO,GAAP;AAAA,oCACI,QAAC,KAAD,CAAO,IAAP;AAAA,qCACI,QAAC,QAAD;AAAU,gBAAA,KAAK,EAAEA,QAAQ,CAACC,KAA1B;AAAiC,gBAAA,IAAI,EAAE,EAAvC;AAA2C,gBAAA,MAAM,EAAC,IAAlD;AAAuD,2BAAQ;AAA/D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,qBADJ,eAII,QAAC,KAAD,CAAO,IAAP;AAAA,wBAAaD,QAAQ,CAACE;AAAtB;AAAA;AAAA;AAAA;AAAA,qBAJJ,eAKI,QAAC,KAAD,CAAO,IAAP;AAAA,wBAAaF,QAAQ,CAACC;AAAtB;AAAA;AAAA;AAAA;AAAA,qBALJ,eAMI,QAAC,KAAD,CAAO,IAAP;AAAA,wBAAaN,UAAU,CAACK,QAAQ,CAACG,SAAV;AAAvB;AAAA;AAAA;AAAA;AAAA,qBANJ,eAOI,QAAC,KAAD,CAAO,IAAP;AAAA,wBAAaR,UAAU,CAACK,QAAQ,CAACI,SAAV;AAAvB;AAAA;AAAA;AAAA;AAAA,qBAPJ,eAQI,QAAC,KAAD,CAAO,IAAP;AAAA,wBAAaJ,QAAQ,CAACK,IAAT,KAAkB,OAAlB,GAA4B,OAA5B,GAAsC;AAAnD;AAAA;AAAA;AAAA;AAAA,qBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,mBADmB;AAAA,SAAtB;AADL;AAAA;AAAA;AAAA;AAAA,eAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,aALA;AAAA,kBADJ;AAkCH,CAnCD;;KAAMT,Y;AAqCN,eAAeA,YAAf","sourcesContent":["import { Header, Table, Icon } from 'semantic-ui-react';\nimport Gravatar from 'react-gravatar';\nimport formatDate from '../../utils/formatDate';\n\nconst AllCustomers = ({customers}) => {\n    return(\n        <>\n        <Header as=\"h2\">\n            <Icon name=\"users\" />\n            Customers ({customers.length})\n        </Header>\n        <Table celled>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>Photo</Table.HeaderCell>\n                    <Table.HeaderCell>Name</Table.HeaderCell>\n                    <Table.HeaderCell>Email</Table.HeaderCell>\n                    <Table.HeaderCell>Joined</Table.HeaderCell>\n                    <Table.HeaderCell>Updated</Table.HeaderCell>\n                    <Table.HeaderCell>Role</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n            <Table.Body>\n                {customers.map(customer => (\n                    <Table.Row>\n                        <Table.Cell>\n                            <Gravatar email={customer.email} size={50} rating=\"pg\" default=\"monsterid\" />\n                        </Table.Cell>\n                        <Table.Cell>{customer.name}</Table.Cell>\n                        <Table.Cell>{customer.email}</Table.Cell>\n                        <Table.Cell>{formatDate(customer.createdAt)}</Table.Cell>\n                        <Table.Cell>{formatDate(customer.updatedAt) }</Table.Cell>\n                        <Table.Cell>{customer.role === 'admin' ? \"Admin\" : \"Customer\"}</Table.Cell>\n                    </Table.Row>\n                ))}\n            </Table.Body>\n        </Table>\n        </>\n    );\n}\n\nexport default AllCustomers;"]},"metadata":{},"sourceType":"module"}