{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\fiverr\\\\fiverr\\\\brought\\\\shoponix\\\\dashboard-source-code\\\\components\\\\Cart\\\\CartSummary.js\";\nimport React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { Button, Segment, Divider } from 'semantic-ui-react';\nimport calculateCartTotal from '../../utils/calculateCartTotal';\n\nconst CartSummary = ({\n  products,\n  handleCheckout,\n  success\n}) => {\n  const [cartAmout, setCartAmaount] = React.useState(0);\n  const [stripeAmount, setStripeAmount] = React.useState(0);\n  const [isCartEmpty, setCartEmpty] = React.useState(false);\n  React.useEffect(() => {\n    const {\n      cartTotal,\n      stripeTotal\n    } = calculateCartTotal(products);\n    setCartAmaount(cartTotal);\n    setStripeAmount(stripeTotal);\n    setCartEmpty(products.length === 0);\n  }, [products]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Segment, {\n      clearing: true,\n      size: \"large\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Sub total:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), \" $\", cartAmout, /*#__PURE__*/_jsxDEV(StripeCheckout, {\n        name: \"Shoponix\",\n        amount: stripeAmount,\n        image: products.length > 0 ? products[0].product.mediaUrl : \"\",\n        currency: \"USD\",\n        shippingAddress: true,\n        billingAddress: true,\n        zipCode: true,\n        stripeKey: \"pk_test_ZaZZWZGlvdIn12yFleIqyjSI00G4e18Kf7\",\n        token: handleCheckout,\n        triggerEvent: \"onClick\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          icon: \"cart\",\n          color: \"green\",\n          floated: \"right\",\n          content: \"Checkout\",\n          disabled: isCartEmpty || success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\nexport default CartSummary;","map":{"version":3,"sources":["D:/fiverr/fiverr/brought/shoponix/dashboard-source-code/components/Cart/CartSummary.js"],"names":["React","StripeCheckout","Button","Segment","Divider","calculateCartTotal","CartSummary","products","handleCheckout","success","cartAmout","setCartAmaount","useState","stripeAmount","setStripeAmount","isCartEmpty","setCartEmpty","useEffect","cartTotal","stripeTotal","length","product","mediaUrl"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,OAA1B,QAAyC,mBAAzC;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,cAAZ;AAA4BC,EAAAA;AAA5B,CAAD,KAA2C;AAC3D,QAAM,CAACC,SAAD,EAAYC,cAAZ,IAA8BX,KAAK,CAACY,QAAN,CAAe,CAAf,CAApC;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCd,KAAK,CAACY,QAAN,CAAe,CAAf,CAAxC;AACA,QAAM,CAACG,WAAD,EAAcC,YAAd,IAA8BhB,KAAK,CAACY,QAAN,CAAe,KAAf,CAApC;AAEAZ,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AAClB,UAAM;AAACC,MAAAA,SAAD;AAAYC,MAAAA;AAAZ,QAA2Bd,kBAAkB,CAACE,QAAD,CAAnD;AACAI,IAAAA,cAAc,CAACO,SAAD,CAAd;AACAJ,IAAAA,eAAe,CAACK,WAAD,CAAf;AACAH,IAAAA,YAAY,CAACT,QAAQ,CAACa,MAAT,KAAoB,CAArB,CAAZ;AACH,GALD,EAKG,CAACb,QAAD,CALH;AAOA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,OAAD;AAAS,MAAA,QAAQ,MAAjB;AAAkB,MAAA,IAAI,EAAC,OAAvB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,QACkCG,SADlC,eAEI,QAAC,cAAD;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,MAAM,EAAEG,YAFZ;AAGI,QAAA,KAAK,EAAEN,QAAQ,CAACa,MAAT,GAAkB,CAAlB,GAAsBb,QAAQ,CAAC,CAAD,CAAR,CAAYc,OAAZ,CAAoBC,QAA1C,GAAqD,EAHhE;AAII,QAAA,QAAQ,EAAC,KAJb;AAKI,QAAA,eAAe,EAAE,IALrB;AAMI,QAAA,cAAc,EAAE,IANpB;AAOI,QAAA,OAAO,EAAE,IAPb;AAQI,QAAA,SAAS,EAAC,4CARd;AASI,QAAA,KAAK,EAAEd,cATX;AAUI,QAAA,YAAY,EAAC,SAVjB;AAAA,+BAYI,QAAC,MAAD;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,KAAK,EAAC,OAFV;AAGI,UAAA,OAAO,EAAC,OAHZ;AAII,UAAA,OAAO,EAAC,UAJZ;AAKI,UAAA,QAAQ,EAAEO,WAAW,IAAIN;AAL7B;AAAA;AAAA;AAAA;AAAA;AAZJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH,CAxCD;;AA0CA,eAAeH,WAAf","sourcesContent":["import React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { Button, Segment, Divider } from 'semantic-ui-react';\nimport calculateCartTotal from '../../utils/calculateCartTotal';\n\nconst CartSummary = ({ products, handleCheckout, success }) => {\n    const [cartAmout, setCartAmaount] = React.useState(0);\n    const [stripeAmount, setStripeAmount] = React.useState(0);\n    const [isCartEmpty, setCartEmpty] = React.useState(false);\n\n    React.useEffect(() => {\n        const {cartTotal, stripeTotal} = calculateCartTotal(products);\n        setCartAmaount(cartTotal);\n        setStripeAmount(stripeTotal);\n        setCartEmpty(products.length === 0)\n    }, [products]);\n\n    return (\n        <React.Fragment>\n            <Divider />\n            <Segment clearing size=\"large\">\n                <strong>Sub total:</strong> ${cartAmout}\n                <StripeCheckout\n                    name=\"Shoponix\"\n                    amount={stripeAmount}\n                    image={products.length > 0 ? products[0].product.mediaUrl : \"\"}\n                    currency=\"USD\"\n                    shippingAddress={true}\n                    billingAddress={true}\n                    zipCode={true}\n                    stripeKey=\"pk_test_ZaZZWZGlvdIn12yFleIqyjSI00G4e18Kf7\"\n                    token={handleCheckout}\n                    triggerEvent=\"onClick\"\n                >\n                    <Button \n                        icon=\"cart\"\n                        color=\"green\"\n                        floated=\"right\"\n                        content=\"Checkout\"\n                        disabled={isCartEmpty || success}\n                    />\n                </StripeCheckout>\n            </Segment>\n        </React.Fragment>\n    );\n}\n\nexport default CartSummary;\n"]},"metadata":{},"sourceType":"module"}