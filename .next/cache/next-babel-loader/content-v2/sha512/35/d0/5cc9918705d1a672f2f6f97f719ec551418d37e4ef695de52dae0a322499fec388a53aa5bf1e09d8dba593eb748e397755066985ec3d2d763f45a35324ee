{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\fiverr\\\\fiverr\\\\brought\\\\shoponix\\\\dashboard-source-code\\\\components\\\\Cart\\\\CartItemList.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Header, Segment, Button, Icon, Item, Message } from 'semantic-ui-react';\nimport { useRouter } from 'next/router';\n\nvar CartItemList = function CartItemList(_ref) {\n  _s();\n\n  var products = _ref.products,\n      user = _ref.user,\n      handleRemoveFromCart = _ref.handleRemoveFromCart,\n      success = _ref.success;\n  // console.log(products)\n  // const user = false;\n  var router = useRouter();\n\n  var mapCartProductsToItems = function mapCartProductsToItems(products) {\n    return products.map(function (p) {\n      return {\n        childKey: p.product._id,\n        header: /*#__PURE__*/_jsxDEV(Item.Header, {\n          as: \"a\",\n          onClick: function onClick() {\n            return router.push(\"/product?_id=\".concat(p.product._id));\n          },\n          children: p.product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 17\n        }, _this),\n        image: p.product.mediaUrl,\n        meta: \"\".concat(p.quantity, \" x $\").concat(p.product.price),\n        fluid: true,\n        extra: /*#__PURE__*/_jsxDEV(Button, {\n          basic: true,\n          icon: \"remove\",\n          floated: \"right\",\n          onClick: function onClick() {\n            return handleRemoveFromCart(p.product._id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, _this)\n      };\n    });\n  };\n\n  if (success) {\n    return /*#__PURE__*/_jsxDEV(Message, {\n      success: true,\n      header: \"success\",\n      content: \"Your order and payment has been accepted!\",\n      icon: \"star outline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, _this);\n  }\n\n  if (products.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Segment, {\n      secondary: true,\n      color: \"green\",\n      inverted: true,\n      textAlign: \"center\",\n      placeholder: true,\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        icons: \"true\",\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"shopping basket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, _this), \"No products in your cart. Add some!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: user ? /*#__PURE__*/_jsxDEV(Button, {\n          color: \"violet\",\n          onClick: function onClick() {\n            return router.push('/products');\n          },\n          children: \"View Products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, _this) : /*#__PURE__*/_jsxDEV(Button, {\n          color: \"blue\",\n          children: \"Login to add products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Item.Group, {\n    divided: true,\n    items: mapCartProductsToItems(products)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 12\n  }, _this);\n};\n\n_s(CartItemList, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = CartItemList;\nexport default CartItemList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartItemList\");","map":{"version":3,"sources":["D:/fiverr/fiverr/brought/shoponix/dashboard-source-code/components/Cart/CartItemList.js"],"names":["Header","Segment","Button","Icon","Item","Message","useRouter","CartItemList","products","user","handleRemoveFromCart","success","router","mapCartProductsToItems","map","p","childKey","product","_id","header","push","name","image","mediaUrl","meta","quantity","price","fluid","extra","length"],"mappings":"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","sourcesContent":["import { Header, Segment, Button, Icon, Item, Message } from 'semantic-ui-react';\nimport { useRouter } from 'next/router';\n\nconst CartItemList = ({ products, user, handleRemoveFromCart, success }) => {\n    // console.log(products)\n    // const user = false;\n    const router = useRouter();\n\n    const mapCartProductsToItems = (products) => {\n        return products.map(p => ({\n            childKey: p.product._id,\n            header: (\n                <Item.Header as=\"a\" onClick={() => router.push(`/product?_id=${p.product._id}`)}>\n                    {p.product.name}\n                </Item.Header>\n            ),\n            image: p.product.mediaUrl,\n            meta: `${p.quantity} x $${p.product.price}`,\n            fluid: true,\n            extra: (\n                <Button \n                    basic\n                    icon=\"remove\"\n                    floated=\"right\"\n                    onClick={() => handleRemoveFromCart(p.product._id)}\n                />\n            )\n        }))\n    }\n\n    if(success){\n        return(\n            <Message \n                success\n                header=\"success\"\n                content=\"Your order and payment has been accepted!\"\n                icon=\"star outline\"\n            />\n        )\n    }\n\n    if(products.length === 0){\n        return (\n            <Segment\n                secondary\n                color=\"green\"\n                inverted\n                textAlign=\"center\"\n                placeholder\n            >\n                <Header icons=\"true\">\n                    <Icon name=\"shopping basket\" />\n                    No products in your cart. Add some!\n                </Header>\n                <div>\n                    {user ? (\n                        <Button\n                            color=\"violet\"\n                            onClick={() => router.push('/products')}\n                        >\n                            View Products\n                        </Button>\n                    ) : (\n                        <Button color=\"blue\">\n                            Login to add products\n                        </Button>\n                    )}\n                </div>\n            </Segment>\n        );\n    }\n\n    return <Item.Group divided items={mapCartProductsToItems(products)} />\n\n}\n\nexport default CartItemList;\n"]},"metadata":{},"sourceType":"module"}