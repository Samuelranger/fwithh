{"ast":null,"code":"import _regeneratorRuntime from \"D:/fiverr/fiverr/brought/shoponix/dashboard-source-code/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/fiverr/fiverr/brought/shoponix/dashboard-source-code/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport axios from 'axios';\nimport ProductList from '../components/Products/ProductList';\nimport baseUrl from '../utils/baseUrl';\n\nvar Products = function Products(_ref) {\n  var products = _ref.products,\n      totalPages = _ref.totalPages;\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: /*#__PURE__*/_jsx(ProductList, {\n      totalPages: totalPages,\n      products: products\n    })\n  });\n};\n\nProducts.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var page, size, searchTerm, url, payload, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // console.log(ctx.query)\n            page = ctx.query.page ? ctx.query.page : \"1\";\n            size = 12;\n            searchTerm = ctx.query.term; // fetch data on server\n\n            url = \"\".concat(baseUrl, \"/api/products\");\n            payload = {\n              params: {\n                page: page,\n                size: size,\n                searchTerm: searchTerm\n              }\n            };\n            _context.next = 7;\n            return axios.get(url, payload);\n\n          case 7:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response.data);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Products;","map":null,"metadata":{},"sourceType":"module"}