{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"D:/fiverr/fiverr/brought/shoponix/dashboard-source-code/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:/fiverr/fiverr/brought/shoponix/dashboard-source-code/node_modules/next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/fiverr/fiverr/brought/shoponix/dashboard-source-code/node_modules/next/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"D:/fiverr/fiverr/brought/shoponix/dashboard-source-code/node_modules/next/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"D:/fiverr/fiverr/brought/shoponix/dashboard-source-code/node_modules/next/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:/fiverr/fiverr/brought/shoponix/dashboard-source-code/node_modules/next/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\fiverr\\\\fiverr\\\\brought\\\\shoponix\\\\dashboard-source-code\\\\components\\\\Dashboard\\\\Charts\\\\MonthlyRevenue.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport dynamic from 'next/dynamic';\nvar Chart = dynamic(_c = function _c() {\n  return import('react-apexcharts');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('react-apexcharts')];\n    },\n    modules: ['react-apexcharts']\n  }\n});\n_c2 = Chart;\n\nvar MonthlyRevenue = /*#__PURE__*/function (_Component) {\n  _inherits(MonthlyRevenue, _Component);\n\n  var _super = _createSuper(MonthlyRevenue);\n\n  function MonthlyRevenue(props) {\n    var _this;\n\n    _classCallCheck(this, MonthlyRevenue);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      series: [{\n        name: 'Net Profit',\n        data: [44, 55, 57, 56, 61, 58, 63, 60, 66, 70, 75, 80]\n      }, {\n        name: 'Revenue',\n        data: [76, 85, 101, 98, 87, 105, 91, 114, 94, 100, 110, 96]\n      }, {\n        name: 'Free Cash Flow',\n        data: [35, 41, 36, 26, 45, 48, 52, 53, 41, 55, 45, 60]\n      }],\n      options: _defineProperty({\n        plotOptions: {\n          bar: {\n            horizontal: false,\n            columnWidth: '35%',\n            endingShape: 'rounded'\n          }\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          show: true,\n          width: 1,\n          colors: ['transparent']\n        },\n        colors: ['#6a4ffc', '#2962ff', '#a64edd'],\n        xaxis: {\n          categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n          labels: {\n            style: {\n              colors: '#686c71',\n              fontSize: '12px'\n            }\n          }\n        },\n        yaxis: {\n          title: {\n            text: '$ (thousands)'\n          }\n        },\n        fill: {\n          opacity: 1\n        },\n        legend: {\n          offsetY: 6\n        },\n        grid: {\n          show: true,\n          borderColor: '#f6f6f7'\n        }\n      }, \"yaxis\", {\n        labels: {\n          style: {\n            color: '#686c71',\n            fontSize: '12px'\n          }\n        },\n        axisBorder: {\n          show: false,\n          color: '#f6f6f7'\n        }\n      })\n    };\n    return _this;\n  }\n\n  _createClass(MonthlyRevenue, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Monthly Revenue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Chart, {\n          options: this.state.options,\n          series: this.state.series,\n          type: \"bar\",\n          height: 450\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return MonthlyRevenue;\n}(Component);\n\nexport default MonthlyRevenue;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Chart$dynamic\");\n$RefreshReg$(_c2, \"Chart\");","map":{"version":3,"sources":["D:/fiverr/fiverr/brought/shoponix/dashboard-source-code/components/Dashboard/Charts/MonthlyRevenue.js"],"names":["React","Component","dynamic","Chart","ssr","MonthlyRevenue","props","state","series","name","data","options","plotOptions","bar","horizontal","columnWidth","endingShape","dataLabels","enabled","stroke","show","width","colors","xaxis","categories","labels","style","fontSize","yaxis","title","text","fill","opacity","legend","offsetY","grid","borderColor","color","axisBorder"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport dynamic from 'next/dynamic';\nconst Chart = dynamic(() => import('react-apexcharts'), {ssr:false});\n\nclass MonthlyRevenue extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            series: [{\n                name: 'Net Profit',\n                data: [44, 55, 57, 56, 61, 58, 63, 60, 66, 70, 75, 80]\n            }, {\n                name: 'Revenue',\n                data: [76, 85, 101, 98, 87, 105, 91, 114, 94, 100, 110, 96]\n            }, {\n                name: 'Free Cash Flow',\n                data: [35, 41, 36, 26, 45, 48, 52, 53, 41, 55, 45, 60]\n            }],\n            options: {\n                plotOptions: {\n                    bar: {\n                        horizontal: false,\n                        columnWidth: '35%',\n                        endingShape: 'rounded'\n                    },\n                },\n                dataLabels: {\n                    enabled: false\n                },\n                stroke: {\n                    show: true,\n                    width: 1,\n                    colors: ['transparent']\n                },\n                colors: ['#6a4ffc', '#2962ff', '#a64edd'],\n                xaxis: {\n                    categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n                    labels: {\n                        style: {\n                            colors: '#686c71',\n                            fontSize: '12px',\n                        },\n                    },\n                },\n                yaxis: {\n                    title: {\n                        text: '$ (thousands)'\n                    }\n                },\n                fill: {\n                    opacity: 1\n                },\n                legend: {\n                    offsetY: 6,\n                },\n                grid: {\n                    show: true,\n                    borderColor: '#f6f6f7',\n                },\n                yaxis: {\n                    labels: {\n                        style: {\n                            color: '#686c71',\n                            fontSize: '12px',\n                        },\n                    },\n                    axisBorder: {\n                        show: false,\n                        color: '#f6f6f7',\n                    },\n                }\n            },\n        };\n    }\n \n    render() {\n        return (\n            <div className=\"chart-box\">\n                <div className=\"header\">\n                    <h3>Monthly Revenue</h3>\n                </div>\n\n                <Chart options={this.state.options} series={this.state.series} type=\"bar\" height={450} />\n            </div>\n        );\n    }\n}\n\nexport default MonthlyRevenue;"]},"metadata":{},"sourceType":"module"}